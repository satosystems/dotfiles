[[plugins]]  # プラグインマネージャ
repo = 'Shougo/dein.vim'

[[plugins]]  # 非同期ライブラリ
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if dein#util#_is_windows()
    let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]  # カーソル位置のコンテキストに合わせてftを切り替える
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]]  # カーソル位置のコンテキストのftを判定するライブラリ
repo = 'Shougo/context_filetype.vim'

[[plugins]]  # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]  # カラースキーマ
repo = 'satosystems/newspaper.vim'
hook_add = '''
  if has('nvim')
    au MyAutoCmd VimEnter * nested colorscheme newspaper
  else
    colorscheme newspaper
  endif
'''

[[plugins]]  # 日本語ヘルプ
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  " see: http://qiita.com/uplus_e10/items/2a75fbe3d80063eb9c18
  let g:quickrun_config = {
  \    "_" : {
  \        'runner': 'vimproc',
  \        'runner/vimproc/updatetime': 60,
  \        'outputter': 'error',
  \        'outputter/error/success': 'buffer',
  \        'outputter/error/error': 'quickfix',
  \        'outputter/buffer/split': ':rightbelow 8sp',
  \        'outputter/buffer/close_on_empty': 1,
  \    },
  \   'haskell': { 'type': 'haskell/stack' },
  \   'haskell/stack': {
  \       'command': 'stack',
  \       'exec': '%c %o %s %a',
  \       'cmdopt': 'runghc',
  \   },
  \}
  " \r で quickfix を閉じて、保存してから quickrun を実行する
  " FIXME: nvim だと quickfix が cclose で閉じてくれない
  let g:quickrun_no_default_key_mappings = 1
  nnoremap \r :cclose<CR>:write<CR>:QuickRun -mode n<CR>
  xnoremap \r :<C-U>cclose<CR>:write<CR>gv:QuickRun -mode v<CR>
  " <C-c> で quickrun を停止
  nnoremap <expr><silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "\<C-c>"
'''

[[plugins]]  # Haskell の補完
repo = 'eagletmt/neco-ghc'

[[plugins]]  # ghc-mod
repo = 'eagletmt/ghcmod-vim'

[[plugins]]
repo = 'eagletmt/unite-haddock'

[[plugins]]
repo = 'dag/vim2hs'

[[plugins]]
repo = 'ujihisa/unite-haskellimport'

[[plugins]]
repo = 'kana/vim-filetype-haskell'

[[plugins]]  # 汎用コメントアウト
repo = 'tpope/vim-commentary'

# Raspberry Pi 環境で非常に時間がかかるためコメントアウト
#[[plugins]]  # My sample
#repo = 'satosystems/neovim-plugin-hello-haskell'
#build = 'stack build'

